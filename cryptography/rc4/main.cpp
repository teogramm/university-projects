#include <iostream>
#include "RC4.h"
#include "crypto_shared/UserInputOutput.h"
#include "crypto_shared/Util.h"

int main(){
    // Create the message to encrypt
    auto message = std::string {"MISTAKESAREASSERIOUSASTHERESULTSTHEYCAUSE"};
    std::cout << "Message: " << message << "\n";

    /*
     * Encryption
     */
    // Create a random 10-byte key
    auto initKey = std::string{"HOUSE"};
    auto key = std::vector<uint8_t>(initKey.c_str(),initKey.c_str()+initKey.size());
    auto keyString = convertBytesToHexString(key);
    std::cout << "Key: " << keyString << "\n";

    // Create a permutation using that key
    auto permutation = generatePermutation(key);
    // Encrypt that message with the permutation generated by our key
    auto ciphertext = encrypt(message,permutation);
    // Convert the ciphertext to a string and display it
    auto ciphertextString = convertBytesToHexString(ciphertext);
    std::cout << "Ciphertext: " << ciphertextString << "\n";

    /*
     * Decryption
     */
    // Re-convert the ciphertext and key string to a byte vector
    auto bytes = convertHexStringToBytes(ciphertextString);
    auto decKey = convertHexStringToBytes(keyString);
    // Generate the decryption permutation
    auto decPermutation = generatePermutation(decKey);
    // Decrypt the message using the permutation
    auto decrypted = encrypt(bytes,decPermutation);
    std::cout << "Decrypted message: " << std::string(decrypted.begin(),decrypted.end());
    return 0;
}
